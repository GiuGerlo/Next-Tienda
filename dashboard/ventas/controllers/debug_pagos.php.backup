<?php
/**
 * Controlador de debug para gestión de pagos
 */

// Configurar headers para JSON
header('Content-Type: application/json; charset=utf-8');

// Iniciar sesión y verificar autenticación
session_start();
require_once '../../../controllers/auth.php';

// Verificar autenticación
if (!isAuthenticated()) {
    echo json_encode([
        'success' => false,
        'message' => 'No autorizado'
    ]);
    exit();
}

// Incluir conexión a la base de datos
require_once '../../../config/connect.php';

try {
    $venta_id = intval($_GET['id'] ?? 0);
    
    if ($venta_id <= 0) {
        throw new Exception('ID de venta inválido: ' . $venta_id);
    }
    
    // Test 1: Verificar conexión a BD
    $test_connection = $pdo->query("SELECT 1");
    if (!$test_connection) {
        throw new Exception('Error de conexión a la base de datos');
    }
    
    // Test 2: Verificar que la venta existe
    $sql_simple = "SELECT id, cliente_nombre, total FROM ventas WHERE id = ?";
    $stmt_simple = $pdo->prepare($sql_simple);
    $stmt_simple->execute([$venta_id]);
    $venta_simple = $stmt_simple->fetch(PDO::FETCH_ASSOC);
    
    if (!$venta_simple) {
        throw new Exception('Venta no encontrada con ID: ' . $venta_id);
    }
    
    // Test 3: Verificar tabla pagos_ventas
    $sql_pagos_simple = "SELECT COUNT(*) as total FROM pagos_ventas WHERE venta_id = ?";
    $stmt_pagos_simple = $pdo->prepare($sql_pagos_simple);
    $stmt_pagos_simple->execute([$venta_id]);
    $count_pagos = $stmt_pagos_simple->fetch(PDO::FETCH_ASSOC);
    
    // Test 4: Probar JOIN con usuarios
    $sql_join_test = "
        SELECT p.id, u.nombre_completo 
        FROM pagos_ventas p 
        LEFT JOIN usuarios u ON p.usuario_id = u.id 
        WHERE p.venta_id = ? 
        LIMIT 1
    ";
    $stmt_join = $pdo->prepare($sql_join_test);
    $stmt_join->execute([$venta_id]);
    $join_test = $stmt_join->fetch(PDO::FETCH_ASSOC);
    
    echo json_encode([
        'success' => true,
        'debug_info' => [
            'venta_id_recibido' => $venta_id,
            'venta_encontrada' => $venta_simple,
            'pagos_count' => $count_pagos,
            'join_test' => $join_test,
            'connection_ok' => true
        ]
    ]);
    
} catch (Exception $e) {
    echo json_encode([
        'success' => false,
        'message' => 'Error: ' . $e->getMessage(),
        'file' => $e->getFile(),
        'line' => $e->getLine()
    ]);
} catch (PDOException $e) {
    echo json_encode([
        'success' => false,
        'message' => 'Error PDO: ' . $e->getMessage(),
        'code' => $e->getCode()
    ]);
}
?>
